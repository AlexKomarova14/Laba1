#!/usr/bin/env bash
set -euo pipefail

SCRIPT_NAME="log_cleaner"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
info() { echo "[INFO] $1" >&2; }
error() { echo "[ERROR] $1" >&2; }

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
show_help() {
    cat << EOF
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $SCRIPT_NAME [–ü–£–¢–¨_–ö_–õ–û–ì–ê–ú] [–ü–û–†–û–ì_–í_–ü–†–û–¶–ï–ù–¢–ê–•]

–ê—Ä–≥—É–º–µ–Ω—Ç—ã:
  –ü–£–¢–¨_–ö_–õ–û–ì–ê–ú        –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –ª–æ–≥-—Ñ–∞–π–ª–∞–º–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  –ü–û–†–û–ì_–í_–ü–†–û–¶–ï–ù–¢–ê–•   –ü–æ—Ä–æ–≥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤ % (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 70)

–ü—Ä–∏–º–µ—Ä—ã:
  $SCRIPT_NAME /var/log 80
  $SCRIPT_NAME /app/logs

–û–ø–∏—Å–∞–Ω–∏–µ:
  –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –§–ê–ô–õ–û–í–û–ô –°–ò–°–¢–ï–ú–´ –≥–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ª–æ–≥–∏
  –∏ –∞—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ—Ä–æ–≥.
EOF
}

#–ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø–æ—Ä–æ–≥ - —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100
validate_threshold() {
    local threshold="$1"
    if ! [[ "$threshold" =~ ^[0-9]+$ ]] || [ "$threshold" -lt 1 ] || [ "$threshold" -gt 100 ]; then
        error "–ü–æ—Ä–æ–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 100"
        return 1
    fi
    return 0
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–Ω–∞
validate_directory() {
    local dir="$1"
    if [ ! -d "$dir" ]; then
        error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è '$dir' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return 1
    fi
    if [ ! -r "$dir" ]; then
        error "–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —á—Ç–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ '$dir'"
        return 1
    fi
    return 0
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ "$#" -gt 0 ]; then
    case "$1" in
        -h|--help|help)
            show_help
            exit 0
            ;;
        -v|--version)
            echo "$SCRIPT_NAME v$VERSION"
            exit 0
            ;;
        *)
            LOG_DIR="$1"
            ;;
    esac
fi

# –ï—Å–ª–∏ –ø—É—Ç—å –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º
if [ -z "${LOG_DIR:-}" ]; then
    read -rp "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ª–æ–≥–∞–º–∏: " LOG_DIR
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
if ! validate_directory "$LOG_DIR"; then
    exit 1
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–∞
if [ "$#" -ge 2 ]; then
    THRESHOLD="$2"
else
    read -rp "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä–æ–≥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤ % (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 70): " input_threshold
    THRESHOLD="${input_threshold:-70}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä–æ–≥
if ! validate_threshold "$THRESHOLD"; then
    exit 1
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –ø–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å
if ! cd "$LOG_DIR" 2>/dev/null; then
    error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é '$LOG_DIR'"
    exit 1
fi
LOG_DIR_ABS=$(pwd -P)
info "–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $LOG_DIR_ABS"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ
get_filesystem_info() {
    local dir="$1"
    
    # –†–∞–∑–º–µ—Ä –ø–∞–ø–∫–∏ –ª–æ–≥–æ–≤ –≤ KB
    FOLDER_KB=$(du -sk "$dir" 2>/dev/null | awk '{print $1}')
    if [ -z "$FOLDER_KB" ] || [ "$FOLDER_KB" -eq 0 ]; then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–∞–∑–º–µ—Ä –ø–∞–ø–∫–∏ –∏–ª–∏ –ø–∞–ø–∫–∞ –ø—É—Å—Ç–∞"
        return 1
    fi
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º df –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è % –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è)
    local fs_info
    if ! fs_info=$(df -k "$dir" 2>/dev/null | tail -1); then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"
        return 1
    fi
    
    # üîç –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è macOS
    FS_TOTAL_KB=$(echo "$fs_info" | awk '{print $2}')    # –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä
    FS_USED_KB=$(echo "$fs_info" | awk '{print $3}')     # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ
    # shellcheck disable=SC2034
    FS_AVAIL_KB=$(echo "$fs_info" | awk '{print $4}')    # 
    
    if [ -z "$FS_TOTAL_KB" ] || [ "$FS_TOTAL_KB" -eq 0 ]; then
        error "–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"
        return 1
    fi
    
    
    PERCENT=$(awk -v used="$FS_USED_KB" -v total="$FS_TOTAL_KB" \
        'BEGIN { if (total>0) printf "%.1f", (used/total)*100; else print "0.0" }')
    
    # –ß–µ–ª–æ–≤–µ—á–∫—Å–∫–∏–µ —Ä–∞–∑–º–µ—Ä—ã
    FOLDER_HUMAN=$(du -sh "$dir" 2>/dev/null | awk '{print $1}')
    FS_TOTAL_HUMAN=$(df -h "$dir" | tail -1 | awk '{print $2}')
    FS_USED_HUMAN=$(df -h "$dir" | tail -1 | awk '{print $3}')
    FS_AVAIL_HUMAN=$(df -h "$dir" | tail -1 | awk '{print $4}')
    
    return 0
}

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ
if ! get_filesystem_info "$LOG_DIR_ABS"; then
    exit 1
fi

# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
echo "=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï ==="
echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤: $LOG_DIR_ABS"
echo "–†–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤: $FOLDER_KB KB ($FOLDER_HUMAN)"
echo "–§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: –≤—Å–µ–≥–æ $FS_TOTAL_HUMAN, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ $FS_USED_HUMAN, –¥–æ—Å—Ç—É–ø–Ω–æ $FS_AVAIL_HUMAN"
echo "–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: $PERCENT%"
echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø–æ—Ä–æ–≥: $THRESHOLD%"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ø–æ—Ä–æ–≥–∞
EXCEED=$(awk -v p="$PERCENT" -v t="$THRESHOLD" \
    'BEGIN { print (p + 0 > t + 0) ? 1 : 0 }')

if [ "$EXCEED" -eq 0 ]; then
    info "–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å $PERCENT% –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ø–æ—Ä–æ–≥–∞ $THRESHOLD% - –∞—Ä—Ö–∏–≤–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è."
    exit 0
fi

info "–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ $PERCENT% –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ø–æ—Ä–æ–≥ $THRESHOLD% - —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞—Ä—Ö–∏–≤–∞—Ü–∏—è."

# –ü—Ä–æ—Ü–µ—Å—Å –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏
BACKUP_DIR="$(dirname "$LOG_DIR_ABS")/backup"
mkdir -p "$BACKUP_DIR"

if [ ! -w "$BACKUP_DIR" ]; then
    error "–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –±—ç–∫–∞–ø–∞: $BACKUP_DIR"
    exit 1
fi

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –º–µ—Å—Ç–∞ –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è
# "–ù—É–∂–Ω–æ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Å—Ç–æ–ª—å–∫–æ, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–∞–ª–æ –Ω–∏–∂–µ –ø–æ—Ä–æ–≥–∞"
NEED_FREE_KB=$(awk -v used="$FS_USED_KB" -v total="$FS_TOTAL_KB" -v threshold="$THRESHOLD" \
    'BEGIN { 
        target_used_kb = (threshold / 100) * total * 0.95  # 95% –æ—Ç –ø–æ—Ä–æ–≥–∞ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        need_free = used - target_used_kb
        print (need_free > 0) ? need_free : 0 
    }')

if [ "$(echo "$NEED_FREE_KB" | awk '{print int($1)}')" -le 0 ]; then
    info "–ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Å–≤–æ–±–æ–∂–¥–∞—Ç—å –º–µ—Å—Ç–æ."
    exit 0
fi

info "–¢—Ä–µ–±—É–µ—Ç—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å: $NEED_FREE_KB KB"

# –ü–æ–∏—Å–∫ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ (–î–õ–Ø MACOS)
find_oldest_files() {
    local target_size="$1"
    local current_size=0
    local files=()
    
    info "–ü–æ–∏—Å–∫ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è $target_size KB..."
    
    # –ù–∞—Ö–æ–¥–∏–º —Ñ–∞–π–ª—ã, —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ (—Å—Ç–∞—Ä—ã–µ –ø–µ—Ä–≤—ã–º–∏)
    while IFS= read -r file; do
        if [ -z "$file" ] || [ ! -f "$file" ]; then
            continue
        fi
        
        # üìè –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ KB (–¥–ª—è macOS)
        local size_kb
        size_kb=$(( $(stat -f%z "$file" 2>/dev/null) / 1024 ))
        
        if [ "$size_kb" -eq 0 ]; then
            continue
        fi
        
        files+=("$file")
        current_size=$((current_size + size_kb))
        
        # üéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏ —Ü–µ–ª–µ–≤–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        if [ "$(echo "$current_size" | awk '{print int($1)}')" -ge "$(echo "$target_size" | awk '{print int($1)}')" ]; then
            info "–î–æ—Å—Ç–∏–≥–Ω—É—Ç —Ü–µ–ª–µ–≤–æ–π —Ä–∞–∑–º–µ—Ä: $current_size KB >= $target_size KB"
            break
        fi
        
    done < <(find "$LOG_DIR_ABS" -type f -not -name ".*" -exec stat -f "%m %N" {} \; 2>/dev/null | \
             sort -n | \
             cut -d' ' -f2-)
    
    printf '%s\n' "${files[@]}"
}

# –ò—â–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏
info "–ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏..."
ARCHIVE_FILES=()
while IFS= read -r file; do
    [ -n "$file" ] && ARCHIVE_FILES+=("$file")
done < <(find_oldest_files "$NEED_FREE_KB")

if [ "${#ARCHIVE_FILES[@]}" -eq 0 ]; then
    info "–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏."
    exit 0
fi

#–ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
TOTAL_ARCHIVE_KB=0
for file in "${ARCHIVE_FILES[@]}"; do
    size_kb=$(( $(stat -f%z "$file" 2>/dev/null) / 1024 ))
    TOTAL_ARCHIVE_KB=$((TOTAL_ARCHIVE_KB + size_kb))
done

info "–ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏: ${#ARCHIVE_FILES[@]}"
info "–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏: $TOTAL_ARCHIVE_KB KB"

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
ARCHIVE_NAME="log_backup_${TIMESTAMP}.tar.gz"
ARCHIVE_PATH="$BACKUP_DIR/$ARCHIVE_NAME"

info "–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞: $ARCHIVE_PATH"

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º —Ñ–∞–π–ª–æ–≤
TMP_LIST=$(mktemp "/tmp/log_archive_list.XXXXXX")
trap 'rm -f "$TMP_LIST"' EXIT

for file in "${ARCHIVE_FILES[@]}"; do
    echo "$file" >> "$TMP_LIST"
done

# –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ (gzip —Å–∂–∞—Ç–∏–µ)
info "–ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã..."
if ! tar -czf "$ARCHIVE_PATH" -C "$LOG_DIR_ABS" -T "$TMP_LIST" 2>/dev/null; then
    error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω
if [ ! -f "$ARCHIVE_PATH" ]; then
    error "–ê—Ä—Ö–∏–≤ –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω"
    exit 1
fi

ARCHIVE_SIZE=$(stat -f%z "$ARCHIVE_PATH" 2>/dev/null | awk '{print int($1/1024)}')
info "–ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $ARCHIVE_PATH ($ARCHIVE_SIZE KB)"

# –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
info "–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
for file in "${ARCHIVE_FILES[@]}"; do
    if [ -f "$file" ]; then
        rm -f "$file"
    fi
done

# –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
#find "$LOG_DIR_ABS" -type d -empty -delete 2>/dev/null || true

info "–ê—Ä—Ö–∏–≤–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
info "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –ø—Ä–∏–º–µ—Ä–Ω–æ: $TOTAL_ARCHIVE_KB KB"

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
if get_filesystem_info "$LOG_DIR_ABS"; then
    echo "=== –†–ï–ó–£–õ–¨–¢–ê–¢ ==="
    echo "–ù–æ–≤–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: $PERCENT%"
    echo "–ê—Ä—Ö–∏–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $ARCHIVE_PATH"
    echo "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –º–µ—Å—Ç–∞: $TOTAL_ARCHIVE_KB KB"
fi

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
rm -f "$TMP_LIST"
trap - EXIT

info "–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É —É—Å–ø–µ—à–Ω–æ!"
